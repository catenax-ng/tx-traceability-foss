name: Release Trace-X

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Calculate Helm release version from CHANGELOG
        run: echo HELM_VERSION=$(cat charts/traceability-foss/CHANGELOG.md | sed -n 's/.*\[\([0-9]\+\.[0-9]\+\.[0-9]\+\)\].*/\1/p' | head -n 1) >> $GITHUB_ENV

      - name: Update Chart.yaml appVersion
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: yq -i eval '.appVersion = "9.9.9"' charts/traceability-foss/Chart.yaml
          # TODO currently we use a version for testing, the line underneath should be the right one
          # TODO cmd: yq -i eval '.appVersion = "${{ github.ref_name }}"' charts/traceability-foss/Chart.yaml

      - name: Update Chart.yaml version
        uses: mikefarah/yq@v4.34.2
        with:
          cmd: yq -i eval '.version = "9.9.9"' charts/traceability-foss/Chart.yaml
          # TODO currently we use a version for testing, the line underneath should be the right one
          # TODO  cmd: yq -i eval '.version = "${{ env.HELM_VERSION }}"' charts/irs-helm/Chart.yaml

      - name: Prepare Helm release
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore(release): Prepare release for Helm version ${{ env.HELM_VERSION }}"
          # TODO Change this line to helm version env when releasing
          branch: chore/prepare-helm-release-TEST
          base: main
          delete-branch: true
          title: Prepare Helm release for next version
          # TODO Use this line when releasing This PR prepares the Helm chart release for version ${{ env.HELM_VERSION }}.
          body: |
            This PR prepares the Helm chart release for version TESTTING.
            Please check whether the Chart was updated correctly and that the CHANGELOG contains the relevant information
            for this release. Also, make sure that the values.yaml is correct before merging this PR.

      - name: Get previous version
        run: echo PREVIOUS_VERSION="9.9.8" >> $GITHUB_ENV
        # TODO run: echo PREVIOUS_VERSION=$(git tag | grep -E ^[0-9]+\\.[0-9]+\\.[0-9]+ | tail -2 | head -n +1) >> $GITHUB_ENV

      - name: Extract changelog text
        # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          #  TODO EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          #  echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
          #  sed -n -e '/## \[${{ github.ref_name }}\]/,/## \[/ p' CHANGELOG.md | head -n -1 | tail -n +2 >> $GITHUB_ENV
          #  echo **Full Changelog**: ${{ github.server_url }}/${{ github.repository }}/compare/${{ env.PREVIOUS_VERSION }}...${{ github.ref_name }} >> $GITHUB_ENV
          #  echo "$EOF" >> "$GITHUB_ENV"

               EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
               echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
               sed -n -e '/## \"["9.9.9"]"/,/## \[/ p' CHANGELOG.md | head -n -1 | tail -n +2 >> $GITHUB_ENV
               echo **Full Changelog**: ${{ github.server_url }}/${{ github.repository }}/compare/${{ env.PREVIOUS_VERSION }}...TESTING" >> $GITHUB_ENV
               echo "$EOF" >> "$GITHUB_ENV"

      - name: Create IRS release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.CHANGELOG }}

  #trigger-jira:
  #  needs:
  #    - release
  #  uses: ./.github/workflows/jira-publish-release.yaml
  #  with:
  #    version: ${{ github.ref_name }}
  #  secrets: inherit
