#
#  Copyright (c) 2022, 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2022, 2023 ZF Friedrichshafen AG
#  Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#

#########################
# Global Values configuration     #
#########################
global:
  enablePrometheus: false
  enableGrafana: false

#########################
# Frontend Chart Values configuration     #
#########################
frontend:
  image:
    tag: $ARGOCD_APP_REVISION
    CATENAX_PORTAL_API_URL: 'https://traceability-test.dev.demo.catena-x.net/api'
    CATENAX_PORTAL_KEYCLOAK_URL: 'https://centralidp.dev.demo.catena-x.net/auth'
    CATENAX_PORTAL_BACKEND_DOMAIN: 'catena-x.net'
    CATENAX_PORTAL_URL: 'https://portal.dev.demo.catena-x.net/'

  nameOverride: "traceability-foss-test-frontend"
  fullnameOverride: "traceability-foss-test-frontend"

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: "traceability-portal-test.dev.demo.catena-x.net"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - "traceability-portal-test.dev.demo.catena-x.net"
        secretName: "traceability-portal-test.dev.demo.catena-x.net-tls"

#########################
# Backend Chart Values configuration     #
#########################
backend:
  image:
    repository: ghcr.io/catenax-ng/tx-traceability-foss
    tag: $ARGOCD_APP_REVISION

  nameOverride: "product-traceability-foss-test-backend"
  fullnameOverride: "product-traceability-foss-test-backend"


  podSecurityContext:
    runAsUser: 10001
    seccompProfile:
      type: RuntimeDefault

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 3000
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
  resources:
    limits:
      cpu: 1500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

  springprofile: test

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
    hosts:
      - host: "traceability-test.dev.demo.catena-x.net"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - "traceability-test.dev.demo.catena-x.net"
        secretName: tls-secret

  traceability:
    bpn: "BPNL00000003CNKC"
    url: "https://traceability-test.dev.demo.catena-x.net"

  datasource:
    url: jdbc:postgresql://tracex-backend-test-postgresql-hl:5432/trace
    username: trace
    password: <path:traceability-foss/data/dev/database#tracePassword>

  oauth2:
    clientId: <path:traceability-foss/data/int/keycloak/oauth2#clientId>
    clientSecret: <path:traceability-foss/data/int/keycloak/oauth2#clientSecret>
    clientTokenUri: "https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token"
    jwkSetUri: "https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/certs"
    resourceClient: "Cl17-CX-Part"

  edc:
    apiKey: "<path:traceability-foss/data/dev/edc/controlplane#edc.api.control.auth.apikey.value>"
    providerUrl: "https://tracex-test-consumer-controlplane.dev.demo.catena-x.net"

#########################
# PG Admin configuration     #
#########################
pgadmin4:
  enabled: true
  strategy:
    type: Recreate
  networkPolicy:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
    hosts:
      - host: tracex-pgadmin4-test.dev.demo.catena-x.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - tracex-pgadmin4-test.dev.demo.catena-x.net
        secretName: tls-secret
  env:
    email: pgadmin4@trace.foss
    password: "<path:traceability-foss/data/dev/database#pgadminPassword>"
    variables:
      - name: PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED
        value: "False"
  resources:
    limits:
      cpu: 768m
      memory: 768Mi
    requests:
      cpu: 100m
      memory: 256Mi

#########################
# Postgres configuration     #
#########################
postgresql:
  enabled: true

  nameOverride: "tracex-backend-test-postgresql"
  fullnameOverride: "tracex-backend-test-postgresql"

  auth:
    postgresPassword: "<path:traceability-foss/data/dev/database#postgresPassword>"
    password: "<path:traceability-foss/data/dev/database#tracePassword>"
    database: "trace"
    username: "trace"

#########################
# IRS configuration     #
#########################
irs-helm:
  enabled: true
  bpn: BPNL00000003CML1
  nameOverride: "tracex-test-irs"
  fullnameOverride: "tracex-test-irs"
  namespace: product-traceability-foss
  springprofile: dev
  irsUrl: "https://tracex-irs-test.dev.demo.catena-x.net"
  ingress:
    enabled: true
    hosts:
      - host: "tracex-irs-test.dev.demo.catena-x.net"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - "tracex-irs-test.dev.demo.catena-x.net"
        secretName: tls-secret
  digitalTwinRegistry:
    type: central
    url: https://trace-x-registry-test.dev.demo.catena-x.net/semantics/registry
    ## TODO needs to be adapted to our mock once we have one.
    discoveryFinderUrl: https://tracex-discovery-mock-test.dev.demo.catena-x.net/api/administration/connectors/discovery/search
  semanticshub:
    url: https://semantics.int.demo.catena-x.net/hub/api/v1/models
  bpdm:
    url: https://partners-pool.int.demo.catena-x.net

  minioUser: <path:traceability-foss/data/dev/minio#user>
  minioPassword: <path:traceability-foss/data/dev/minio#password>
  minioUrl: http://tracex-test-irs-minio:9000

  keycloak:
    oauth2:
      clientId: <path:traceability-foss/data/int/keycloak/oauth2#clientId>
      clientSecret: <path:traceability-foss/data/int/keycloak/oauth2#clientSecret>
      clientTokenUri: https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token
      jwkSetUri: https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/certs

  edc:
    callbackurl: http://tracex-test-irs:8181/internal/endpoint-data-reference
    catalog:
      cache:
        enabled: "false"
    controlplane:
      endpoint:
        statesuffix: /state
      apikey:
        secret: <path:traceability-foss/data/dev/edc/controlplane#edc.api.control.auth.apikey.value>

  minio:
    nameOverride: "tracex-test-irs-minio"
    fullnameOverride: "tracex-test-irs-minio"
    serviceAccount:
      create: false
    rootUser: <path:traceability-foss/data/dev/minio#user>
    rootPassword: <path:traceability-foss/data/dev/minio#password>


###################################
# EDC Consumer configuration  #
###################################
tractusx-connector:
  enabled: true
  install:
    postgresql: false
    daps: false
    vault: false
  participant:
    id: BPNL00000003CNKC

  controlplane:
    ingresses:
      - enabled: true
        hostname: "tracex-test-consumer-controlplane.dev.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - protocol
          - management
        tls:
          enabled: true
          secretName: tls-secret

    endpoints:
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        port: 8081
        path: /management
        authKey: <path:traceability-foss/data/dev/edc/controlplane#edc.api.control.auth.apikey.value> # -- authentication key, must be attached to each 'X-Api-Key' request header
      # -- protocol api, used for inter connector communication and must be internet facing
      protocol:
        port: 8084
        path: /api/v1/dsp
      # -- observability api with unsecured access, must not be internet facing
      observability:
        port: 8085
        path: /observability  # -- observability api, provides /health /readiness and /liveness endpoints
        insecure: true  # -- allow or disallow insecure access, i.e. access without authentication

    internationalDataSpaces:
      id: TXDC
      description: Tractus-X Eclipse IDS Data Space Connector
      title: ""
      maintainer: ""
      curator: ""
      catalogId: TXDC-Catalog

    # Explicitly declared url for reaching the ids api (e.g. if ingresses not used)
    url:
      ids: ""

    resources:
      limits:
        cpu: 768m
        memory: 768Mi
      requests:
        cpu: 100m
        memory: 256Mi

  dataplane:
    ingresses:
      - enabled: true
        hostname: "tracex-test-consumer-dataplane.dev.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - public
        className: "nginx"
        tls:
          enabled: true
          secretName: tls-secret

    endpoints:
      public:
        port: 8081
        path: /api/public
      observability:
        port: 8085
        path: /observability
        insecure: true

    resources:
      limits:
        cpu: 768m
        memory: 768Mi
      requests:
        cpu: 100m
        memory: 256Mi

  ## currently we need to provide a url but is not used anywhere
  # URL where the EndpointDataReference callback will be sent to
  backendService:
    httpProxyTokenReceiverUrl: "https://traceability-test.dev.demo.catena-x.net/api/callback/endpoint-data-reference"

  ################################
  # EDC Vault/DAPS Configuration #
  ################################
  vault:
    hashicorp:
      url: "https://vault.demo.catena-x.net"
      token: "<path:traceability-foss/data/dev/edc#edc.vault.hashicorp.token>"
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret: /v1/traceability-foss
        health: /v1/sys/health
    secretNames:
      transferProxyTokenSignerPrivateKey: daps-cert-edc-test-consumer-private
      transferProxyTokenSignerPublicKey: daps-cert-edc-test-consumer-public
      transferProxyTokenEncryptionAesKey: token-signer-aes-key
      dapsPrivateKey: daps-cert-edc-test-consumer-private
      dapsPublicKey: daps-cert-edc-test-consumer-public

  daps:
    url: "https://daps1.int.demo.catena-x.net"
    clientId: FE:FB:DF:A6:07:E4:CF:C1:84:32:15:0C:07:B7:C7:55:4E:C7:4D:D4:keyid:FE:FB:DF:A6:07:E4:CF:C1:84:32:15:0C:07:B7:C7:55:4E:C7:4D:D4
    paths:
      jwks: /.well-known/jwks.json
      token: /token
  ##################################
  # EDC Postgres Configuration #
  ##################################
  postgresql:
    enabled: true
    auth:
      username: "<path:traceability-foss/data/dev/edc/database#user>"
      password: "<path:traceability-foss/data/dev/edc/database#password>"
    username: "<path:traceability-foss/data/dev/edc/database#user>"
    password: "<path:traceability-foss/data/dev/edc/database#password>"
    jdbcUrl: "jdbc:postgresql://tracex-test-consumer-edc-postgresql-hl:5432/edc"

###################################
# EDC Postgres Configuration #
###################################
edc-postgresql:
  nameOverride: "tracex-test-consumer-edc-postgresql"
  fullnameOverride: "tracex-test-consumer-edc-postgresql"
  enabled: true
  auth:
    database: edc
    username: <path:traceability-foss/data/dev/edc/database#user>
    postgresPassword: <path:traceability-foss/data/dev/edc/database#password>
    password: <path:traceability-foss/data/dev/edc/database#password>
