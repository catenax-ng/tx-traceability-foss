################################################################################
# Copyright (c) 2022, 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
# Copyright (c) 2022, 2023 ZF Friedrichshafen AG
# Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

traceability:
  bpn: ${TRACEABILITY_BPN}
  url: ${TRACEABILITY_URL}
  leftOperand: ${TRACEABILITY_LEFT_OPERAND}
  operatorType: ${TRACEABILITY_OPERATOR_TYPE}
  rightOperand: ${TRACEABILITY_RIGHT_OPERAND}
  validUntil: ${TRACEABILITY_VALID_UNTIL}
  supportedAspectTypes:
    asBuiltTypes:
        mainAsBuiltAspectType:
          serialParts:
            - "urn:samm:io.catenax.serial_part:1.0.0#SerialPart"
            - "urn:bamm:io.catenax.serial_part:1.0.0#SerialPart"
            - "urn:bamm:io.catenax.serial_part:1.1.0#SerialPart"
            - "urn:bamm:io.catenax.serial_part:1.0.1#SerialPart"
          batches:
            - "urn:bamm:com.catenax.batch:1.0.0#Batch"
            - "urn:bamm:io.catenax.batch:1.0.0#Batch"
            - "urn:bamm:io.catenax.batch:1.0.2#Batch"
            - "urn:samm:io.catenax.batch:2.0.0#Batch"
          justInSequences:
            - "urn:bamm:io.catenax.just_in_sequence_part:1.0.0#JustInSequencePart"
        detailAsBuiltAspectType:
          tractionBatteryCodes:
            - "urn:bamm:io.catenax.traction_battery_code:1.0.0#TractionBatteryCode"
        relationAsBuiltAspectType:
          upwardRelations:
            - "urn:bamm:io.catenax.single_level_usage_as_built:2.0.0#SingleLevelUsageAsBuilt"
          downwardRelations:
            - "urn:bamm:io.catenax.single_level_bom_as_built:2.0.0#SingleLevelBomAsBuilt"

    asPlannedTypes:
        mainAsPlannedAspectType:
          asPlanned:
            - "urn:bamm:io.catenax.part_as_planned:1.0.1#PartAsPlanned"
            - "urn:bamm:io.catenax.part_as_planned:1.0.0#PartAsPlanned"
        detailAsBuiltAspectType:
          partSiteInformationAsPlanned:
            - "urn:bamm:io.catenax.part_site_information_as_planned:1.0.0#PartSiteInformationAsPlanned"
        relationAsPlannedAspectType:
          upwardRelations:
            - "urn:bamm:io.catenax.single_level_usage_as_planned:1.1.0#SingleLevelUsageAsPlanned"
          downwardRelations:
            - "urn:bamm:io.catenax.single_level_bom_as_planned:2.0.0#SingleLevelBomAsPlanned"
edc:
  ids:
    path: "/api/v1/dsp"
  negotiation: "/management/v2/contractnegotiations"
  contractdefinitions: "/management/v2/contractdefinitions"
  transfer: "/management/v2/transferprocesses"
  catalog:
    path: "/management/v2/catalog/request"
    cache:
      enabled: false # Set to false to disable caching
      ttl: P1D # Time after which a cached Item is no longer valid and the real catalog is called instead
      maxCachedItems: 64000 # Maximum amount of cached catalog items
  policydefinitions: "/management/v2/policydefinitions"
  assets: "/management/v2/assets"
  api-auth-key: ${EDC_API_KEY}
  bpn-provider-url-mappings: { }
  provider-edc-url: ${EDC_PROVIDER_URL}
  callback-urls: ${EDC_CALLBACK_URL}

irs-edc-client:
  callback-url: ${EDC_CALLBACK_URL_EDC_CLIENT}
  controlplane:
    request-ttl: PT10M # How long to wait for an async EDC negotiation request to finish, ISO 8601 Duration
    endpoint:
      data: ${EDC_DATA_ENDPOINT_URL}
      catalog: /v2/catalog/request # EDC consumer controlplane catalog path
      contract-negotiation: /v2/contractnegotiations # EDC consumer controlplane contract negotiation path
      transfer-process: /v2/transferprocesses # EDC consumer controlplane transfer process path
      state-suffix: /state # Path of the state suffix for contract negotiation and transfer process
    provider-suffix: /api/v1/dsp # Suffix to add to data requests to the EDC provider controlplane
    catalog-limit: 1000 # Max number of items to fetch from the EDC provider catalog
    catalog-page-size: 50 # Number of items to fetch at one page from the EDC provider catalog when using pagination
    api-key:
      header: "X-Api-Key" # API header key to use in communication with the EDC consumer controlplane
      secret: ${EDC_API_KEY} # API header secret to use in communication with the EDC consumer controlplane
    datareference:
      storage:
        duration: PT1H # Time after which stored data references will be cleaned up, ISO 8601 Duration

  submodel:
    request-ttl: PT10M # How long to wait for an async EDC submodel retrieval to finish, ISO 8601 Duration
    path: /submodel # The path to append to the submodel data reference endpoint
    urn-prefix: /urn # A prefix used to identify URNs correctly in the submodel endpoint address
    timeout:
      read: PT90S # HTTP read timeout for the submodel client
      connect: PT90S # HTTP connect timeout for the submodel client

server:
  servlet:
    context-path: /api

management:
  endpoint:
    health:
      probes:
        enabled: true
  health:
    readinessState:
      enabled: true
    livenessState:
      enabled: true
  endpoints:
    web:
      base-path: /actuator
  server:
    port: 8081

spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            authorization-grant-type: client_credentials
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
          OKTA:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: openid
        provider:
          keycloak:
            token-uri: ${OAUTH2_PROVIDER_TOKEN_URI}
          OKTA:
            token-uri: ${OAUTH2_PROVIDER_TOKEN_URI}
      resourceserver:
        jwt:
          jwk-set-uri: ${OAUTH2_JWK_SET_URI:https://default}

jwt:
  resource-client: ${JWT_RESOURCE_CLIENT}

feign:
  client:
    config:
      default:
        loggerLevel: full
  submodelApi:
    url: ${SUBMODEL_URL}
  irsApi:
    url: ${IRS_URL}
    adminApiKey: ${IRS_ADMIN_API_KEY}
    regularApiKey: ${IRS_REGULAR_API_KEY}

  portalApi:
    url: ${PORTAL_URL}
  okhttp:
    enabled: true
  hystrix:
    enabled: false
  default:
    connectionTimeoutMillis: 200
    readTimeoutMillis: 500
    maxIdleConnections: 10
    keepAliveDurationMinutes: 5

cache:
  bpn:
    name: "bpn-mappings"
    maximumSize: 500
    expireAfterWrite: 1d

cors:
  origins: >
    ${ALLOWED_CORS_ORIGIN_FIRST},
    ${ALLOWED_CORS_ORIGIN_SECOND}

resilience4j:
  retry:
    instances:
      irs-get:
        resultPredicate: 'org.eclipse.tractusx.traceability.assets.infrastructure.base.irs.JobRunning'
        maxAttempts: 10
        waitDuration: 30s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      registry:
        maxAttempts: 20
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 1

digitalTwinRegistryClient:
  shellDescriptorTemplate: /shell-descriptors/{aasIdentifier} # The path to retrieve AAS descriptors from the decentral DTR, must contain the placeholder {aasIdentifier}
  lookupShellsTemplate: /lookup/shells?assetIds={assetIds} # The path to lookup shells from the decentral DTR, must contain the placeholder {assetIds}
  oAuthClientId: keycloak
  type: "decentral"
  discoveryFinderUrl: ${DISCOVERY_FINDER_URL_WITH_PATH}
  descriptorEndpoint: "" # required if type is "central", must contain the placeholder {aasIdentifier}
  shellLookupEndpoint: "" # required if type is "central", must contain the placeholder {assetIds}


