{
  "openapi": "3.0.1",
  "info": {
    "title": "Trace-FOSS - OpenAPI Documentation",
    "description": "Trace-FOSS is a system for tracking parts along the supply chain. A high level of transparency across the supplier network enables faster intervention based on a recorded event in the supply chain. This saves costs by seamlessly tracking parts and creates trust through clearly defined and secure data access by the companies and persons involved in the process.",
    "license": {
      "name": "License: Apache 2.0"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:9998/api",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "oAuth2": [
        "profile email"
      ]
    }
  ],
  "tags": [
    {
      "name": "Investigations",
      "description": "Operations on Investigation Notification"
    }
  ],
  "paths": {
    "/bpn-config": {
      "get": {
        "tags": [
          "BpnEdcMapping"
        ],
        "summary": "Get BPN EDC URL mappings",
        "description": "The endpoint returns a result of BPN EDC URL mappings.",
        "operationId": "getBpnEdcs",
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BpnEdcMappingResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BpnEdcMapping"
        ],
        "summary": "Updates BPN EDC URL mappings",
        "description": "The endpoint updates BPN EDC URL mappings",
        "operationId": "updateBpnEdcMappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 1000,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BpnMappingRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for BpnEdcMapping",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BpnEdcMappingResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BpnEdcMapping"
        ],
        "summary": "Creates BPN EDC URL mappings",
        "description": "The endpoint creates BPN EDC URL mappings",
        "operationId": "createBpnEdcUrlMappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 1000,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BpnMappingRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for BpnEdcMapping",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BpnEdcMappingResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/submodel/data/{submodelId}": {
      "get": {
        "tags": [
          "Submodel"
        ],
        "summary": "Gets Submodel by its id",
        "description": "The endpoint returns Submodel for given id. Used for data providing functionality",
        "operationId": "getSubmodelById",
        "parameters": [
          {
            "name": "submodelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Submodel"
        ],
        "summary": "Save Submodel",
        "description": "This endpoint allows you to save a Submodel identified by its ID.",
        "operationId": "saveSubmodel",
        "parameters": [
          {
            "name": "submodelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content.",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Start investigations by part ids",
        "description": "The endpoint starts investigations based on part ids provided.",
        "operationId": "investigateAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityNotificationIdResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/{investigationId}/update": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Update investigations by id",
        "description": "The endpoint updates investigations by their id.",
        "operationId": "updateInvestigation",
        "parameters": [
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/{investigationId}/close": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Close investigations by id",
        "description": "The endpoint closes investigations by their id.",
        "operationId": "closeInvestigation",
        "parameters": [
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/{investigationId}/cancel": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Cancles investigations by id",
        "description": "The endpoint cancles investigations by their id.",
        "operationId": "cancelInvestigation",
        "parameters": [
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/{investigationId}/approve": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Approves investigations by id",
        "description": "The endpoint approves investigations by their id.",
        "operationId": "approveInvestigation",
        "parameters": [
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/filter": {
      "post": {
        "tags": [
          "Investigations"
        ],
        "summary": "Filter investigations defined by the request body",
        "description": "The endpoint returns investigations as paged result.",
        "operationId": "filterInvestigations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageableFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "maxItems": 2147483647,
                    "minItems": -2147483648,
                    "type": "array",
                    "description": "Investigations",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "maximum": 255,
                          "minimum": 0,
                          "maxLength": 255,
                          "type": "integer",
                          "format": "int64",
                          "example": 66
                        },
                        "status": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "CREATED",
                          "enum": [
                            "CREATED",
                            "SENT",
                            "RECEIVED",
                            "ACKNOWLEDGED",
                            "ACCEPTED",
                            "DECLINED",
                            "CANCELED",
                            "CLOSED"
                          ]
                        },
                        "description": {
                          "maxLength": 1000,
                          "minLength": 0,
                          "type": "string",
                          "example": "DescriptionText"
                        },
                        "createdBy": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003AYRE"
                        },
                        "createdByName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "createdDate": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "example": "2023-02-21T21:27:10.734950Z"
                        },
                        "assetIds": {
                          "maxItems": 1000,
                          "minItems": 0,
                          "type": "array",
                          "example": [
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
                          ],
                          "items": {
                            "type": "string",
                            "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
                          }
                        },
                        "channel": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "SENDER",
                          "enum": [
                            "SENDER",
                            "RECEIVER"
                          ]
                        },
                        "reason": {
                          "$ref": "#/components/schemas/QualityNotificationReasonResponse"
                        },
                        "sendTo": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003AYRE"
                        },
                        "sendToName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "severity": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "MINOR",
                          "enum": [
                            "MINOR",
                            "MAJOR",
                            "CRITICAL",
                            "LIFE-THREATENING"
                          ]
                        },
                        "targetDate": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "example": "2099-02-21T21:27:10.734950Z"
                        },
                        "errorMessage": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "EDC not reachable"
                        },
                        "qualityNotificationMessageResponseList": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/QualityNotificationMessageResponse"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/edc/notification/contract": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Triggers EDC notification contract",
        "description": "The endpoint Triggers EDC notification contract based on notification type and method",
        "operationId": "createNotificationContract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationContractRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNotificationContractResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "All contract agreements for all assets",
        "description": "This endpoint returns all contract agreements for alls assets in Trace-X",
        "operationId": "contracts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageableFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "description": "PageResults",
                  "items": {
                    "$ref": "#/components/schemas/PageResultContractResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/publish": {
      "post": {
        "tags": [
          "AssetsImport",
          "AssetsPublish"
        ],
        "summary": "asset publish",
        "description": "This endpoint publishes assets to the Catena-X network.",
        "operationId": "publishAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAssetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/import": {
      "post": {
        "tags": [
          "AssetsImport"
        ],
        "summary": "asset upload",
        "description": "This endpoint stores assets in the application. Those can be later published in the Catena-X network.",
        "operationId": "importJson",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned/sync": {
      "post": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Synchronizes assets from IRS",
        "description": "The endpoint synchronizes the assets from irs.",
        "operationId": "sync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created."
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned/detail-information": {
      "post": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Searches for assets by ids.",
        "description": "The endpoint searchs for assets by id and returns a list of them.",
        "operationId": "getDetailInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDetailInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "maxItems": 2147483647,
                    "type": "array",
                    "description": "Assets",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        },
                        "idShort": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "assembly-part-relationship"
                        },
                        "semanticModelId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "NO-246880451848384868750731"
                        },
                        "businessPartner": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003CSGV"
                        },
                        "manufacturerName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "nameAtManufacturer": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "manufacturerPartId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "owner": {
                          "type": "string",
                          "example": "CUSTOMER",
                          "enum": [
                            "SUPPLIER",
                            "CUSTOMER",
                            "OWN",
                            "UNKNOWN"
                          ]
                        },
                        "childRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Child relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "parentRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Parent relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "qualityType": {
                          "type": "string",
                          "example": "Ok",
                          "enum": [
                            "Ok",
                            "Minor",
                            "Major",
                            "Critical",
                            "LifeThreatening"
                          ]
                        },
                        "van": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "OMAYSKEITUGNVHKKX"
                        },
                        "semanticDataModel": {
                          "type": "string",
                          "example": "BATCH",
                          "enum": [
                            "BATCH",
                            "SERIALPART",
                            "UNKNOWN",
                            "PARTASPLANNED",
                            "JUSTINSEQUENCE",
                            "TOMBSTONEASBUILT",
                            "TOMBSTONEASPLANNED"
                          ]
                        },
                        "classification": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "component"
                        },
                        "detailAspectModels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DetailAspectModelResponse"
                          }
                        },
                        "sentQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "receivedQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "sentQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "receivedQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "importState": {
                          "type": "string",
                          "example": "TRANSIENT",
                          "enum": [
                            "TRANSIENT",
                            "PERSISTENT",
                            "ERROR",
                            "IN_SYNCHRONIZATION",
                            "UNSET"
                          ]
                        },
                        "importNote": {
                          "type": "string",
                          "example": "Asset created successfully in transient state"
                        },
                        "tombstone": {
                          "type": "string",
                          "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                        },
                        "contractAgreementId": {
                          "type": "string",
                          "example": "TODO"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/sync": {
      "post": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Synchronizes assets from IRS",
        "description": "The endpoint synchronizes the assets from irs.",
        "operationId": "sync_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created."
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/detail-information": {
      "post": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Searches for assets by ids.",
        "description": "The endpoint searchs for assets by id and returns a list of them.",
        "operationId": "getDetailInformation_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDetailInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "maxItems": 2147483647,
                    "type": "array",
                    "description": "Assets",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        },
                        "idShort": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "assembly-part-relationship"
                        },
                        "semanticModelId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "NO-246880451848384868750731"
                        },
                        "businessPartner": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003CSGV"
                        },
                        "manufacturerName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "nameAtManufacturer": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "manufacturerPartId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "owner": {
                          "type": "string",
                          "example": "CUSTOMER",
                          "enum": [
                            "SUPPLIER",
                            "CUSTOMER",
                            "OWN",
                            "UNKNOWN"
                          ]
                        },
                        "childRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Child relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "parentRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Parent relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "qualityType": {
                          "type": "string",
                          "example": "Ok",
                          "enum": [
                            "Ok",
                            "Minor",
                            "Major",
                            "Critical",
                            "LifeThreatening"
                          ]
                        },
                        "van": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "OMAYSKEITUGNVHKKX"
                        },
                        "semanticDataModel": {
                          "type": "string",
                          "example": "BATCH",
                          "enum": [
                            "BATCH",
                            "SERIALPART",
                            "UNKNOWN",
                            "PARTASPLANNED",
                            "JUSTINSEQUENCE",
                            "TOMBSTONEASBUILT",
                            "TOMBSTONEASPLANNED"
                          ]
                        },
                        "classification": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "component"
                        },
                        "detailAspectModels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DetailAspectModelResponse"
                          }
                        },
                        "sentQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "receivedQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "sentQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "receivedQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "importState": {
                          "type": "string",
                          "example": "TRANSIENT",
                          "enum": [
                            "TRANSIENT",
                            "PERSISTENT",
                            "ERROR",
                            "IN_SYNCHRONIZATION",
                            "UNSET"
                          ]
                        },
                        "importNote": {
                          "type": "string",
                          "example": "Asset created successfully in transient state"
                        },
                        "tombstone": {
                          "type": "string",
                          "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                        },
                        "contractAgreementId": {
                          "type": "string",
                          "example": "TODO"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Start alert by part ids",
        "description": "The endpoint starts alert based on part ids provided.",
        "operationId": "alertAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityNotificationIdResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/{alertId}/update": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Update alert by id",
        "description": "The endpoint updates alert by their id.",
        "operationId": "updateAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/{alertId}/close": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Close alert by id",
        "description": "The endpoint closes alert by id.",
        "operationId": "closeAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseQualityNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/{alertId}/cancel": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Cancels alert by id",
        "description": "The endpoint cancels alert by id.",
        "operationId": "cancelAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/{alertId}/approve": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Approves alert by id",
        "description": "The endpoint approves alert by id.",
        "operationId": "approveAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/filter": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Filter alerts defined by the request body",
        "description": "The endpoint returns alerts as paged result.",
        "operationId": "filterAlerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageableFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Alerts",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maximum": 255,
                        "minimum": 0,
                        "maxLength": 255,
                        "type": "integer",
                        "format": "int64",
                        "example": 66
                      },
                      "status": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "CREATED",
                        "enum": [
                          "CREATED",
                          "SENT",
                          "RECEIVED",
                          "ACKNOWLEDGED",
                          "ACCEPTED",
                          "DECLINED",
                          "CANCELED",
                          "CLOSED"
                        ]
                      },
                      "description": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "example": "DescriptionText"
                      },
                      "createdBy": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003AYRE"
                      },
                      "createdByName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "createdDate": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "2023-02-21T21:27:10.734950Z"
                      },
                      "assetIds": {
                        "maxItems": 1000,
                        "minItems": 0,
                        "type": "array",
                        "example": [
                          "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
                          "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
                          "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
                        ],
                        "items": {
                          "type": "string",
                          "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
                        }
                      },
                      "channel": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "SENDER",
                        "enum": [
                          "SENDER",
                          "RECEIVER"
                        ]
                      },
                      "reason": {
                        "$ref": "#/components/schemas/QualityNotificationReasonResponse"
                      },
                      "sendTo": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003AYRE"
                      },
                      "sendToName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "severity": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "MINOR",
                        "enum": [
                          "MINOR",
                          "MAJOR",
                          "CRITICAL",
                          "LIFE-THREATENING"
                        ]
                      },
                      "targetDate": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "2099-02-21T21:27:10.734950Z"
                      },
                      "errorMessage": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "EDC not reachable"
                      },
                      "qualityNotificationMessageResponseList": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/QualityNotificationMessageResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned/{assetId}": {
      "get": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Get asset by id",
        "description": "The endpoint returns an asset filtered by id .",
        "operationId": "assetById",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the assets found",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Updates asset",
        "description": "The endpoint updates asset by provided quality type.",
        "operationId": "updateAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the updated asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/{assetId}": {
      "get": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Get asset by id",
        "description": "The endpoint returns an asset filtered by id .",
        "operationId": "assetById_1",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the assets found",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Updates asset",
        "description": "The endpoint updates asset by provided quality type.",
        "operationId": "updateAsset_1",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the updated asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/registry/reload": {
      "get": {
        "tags": [
          "Registry"
        ],
        "summary": "Triggers reload of shell descriptors",
        "description": "The endpoint Triggers reload of shell descriptors.",
        "operationId": "reload",
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Created registry reload job."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Get all policies ",
        "description": "The endpoint returns all policies .",
        "operationId": "policy",
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the policies",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/{investigationId}": {
      "get": {
        "tags": [
          "Investigations"
        ],
        "summary": "Gets investigations by id",
        "description": "The endpoint returns investigations as paged result by their id.",
        "operationId": "getInvestigation",
        "parameters": [
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": -2147483648,
                  "type": "array",
                  "description": "Investigations",
                  "items": {
                    "$ref": "#/components/schemas/InvestigationResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/investigations/distinctFilterValues": {
      "get": {
        "tags": [
          "Assets",
          "Investigations"
        ],
        "summary": "getDistinctFilterValues",
        "description": "The endpoint returns a distinct filter values for given fieldName.",
        "operationId": "distinctFilterValues",
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startWith",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SENDER",
                "RECEIVER"
              ]
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns a distinct filter values for given fieldName.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Returns dashboard related data",
        "description": "The endpoint can return limited data based on the user role",
        "operationId": "dashboard",
        "responses": {
          "200": {
            "description": "Returns dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/import/report/{importJobId}": {
      "get": {
        "tags": [
          "ImportReport",
          "AssetsImport"
        ],
        "summary": "report of the imported assets",
        "description": "This endpoint returns information about the imported assets to Trace-X.",
        "operationId": "importReport",
        "parameters": [
          {
            "name": "importJobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned": {
      "get": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Get assets by pagination",
        "description": "The endpoint returns a paged result of assets.",
        "operationId": "AssetsAsPlanned",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OwnPageable"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchCriteriaRequestParam"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "maxItems": 2147483647,
                    "type": "array",
                    "description": "Assets",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        },
                        "idShort": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "assembly-part-relationship"
                        },
                        "semanticModelId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "NO-246880451848384868750731"
                        },
                        "businessPartner": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003CSGV"
                        },
                        "manufacturerName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "nameAtManufacturer": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "manufacturerPartId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "owner": {
                          "type": "string",
                          "example": "CUSTOMER",
                          "enum": [
                            "SUPPLIER",
                            "CUSTOMER",
                            "OWN",
                            "UNKNOWN"
                          ]
                        },
                        "childRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Child relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "parentRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Parent relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "qualityType": {
                          "type": "string",
                          "example": "Ok",
                          "enum": [
                            "Ok",
                            "Minor",
                            "Major",
                            "Critical",
                            "LifeThreatening"
                          ]
                        },
                        "van": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "OMAYSKEITUGNVHKKX"
                        },
                        "semanticDataModel": {
                          "type": "string",
                          "example": "BATCH",
                          "enum": [
                            "BATCH",
                            "SERIALPART",
                            "UNKNOWN",
                            "PARTASPLANNED",
                            "JUSTINSEQUENCE",
                            "TOMBSTONEASBUILT",
                            "TOMBSTONEASPLANNED"
                          ]
                        },
                        "classification": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "component"
                        },
                        "detailAspectModels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DetailAspectModelResponse"
                          }
                        },
                        "sentQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "receivedQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "sentQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "receivedQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "importState": {
                          "type": "string",
                          "example": "TRANSIENT",
                          "enum": [
                            "TRANSIENT",
                            "PERSISTENT",
                            "ERROR",
                            "IN_SYNCHRONIZATION",
                            "UNSET"
                          ]
                        },
                        "importNote": {
                          "type": "string",
                          "example": "Asset created successfully in transient state"
                        },
                        "tombstone": {
                          "type": "string",
                          "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                        },
                        "contractAgreementId": {
                          "type": "string",
                          "example": "TODO"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned/distinctFilterValues": {
      "get": {
        "tags": [
          "Assets",
          "AssetsAsPlanned"
        ],
        "summary": "getDistinctFilterValues",
        "description": "The endpoint returns a distinct filter values for given fieldName.",
        "operationId": "distinctFilterValues_1",
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startWith",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SUPPLIER",
                "CUSTOMER",
                "OWN",
                "UNKNOWN"
              ]
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns a distinct filter values for given fieldName.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-planned/*/children/{childId}": {
      "get": {
        "tags": [
          "AssetsAsPlanned"
        ],
        "summary": "Get asset by child id",
        "description": "The endpoint returns an asset filtered by child id.",
        "operationId": "assetByChildIdAndAssetId",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the asset by childId",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built": {
      "get": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Get assets by pagination",
        "description": "The endpoint returns a paged result of assets.",
        "operationId": "assets",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OwnPageable"
            }
          },
          {
            "name": "searchCriteriaRequestParam",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchCriteriaRequestParam"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the paged result found for Asset",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "maxItems": 2147483647,
                    "type": "array",
                    "description": "Assets",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        },
                        "idShort": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "assembly-part-relationship"
                        },
                        "semanticModelId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "NO-246880451848384868750731"
                        },
                        "businessPartner": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "BPNL00000003CSGV"
                        },
                        "manufacturerName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "nameAtManufacturer": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "manufacturerPartId": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "Tier C"
                        },
                        "owner": {
                          "type": "string",
                          "example": "CUSTOMER",
                          "enum": [
                            "SUPPLIER",
                            "CUSTOMER",
                            "OWN",
                            "UNKNOWN"
                          ]
                        },
                        "childRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Child relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "parentRelations": {
                          "maxItems": 2147483647,
                          "type": "array",
                          "description": "Parent relationships",
                          "items": {
                            "$ref": "#/components/schemas/DescriptionsResponse"
                          }
                        },
                        "qualityType": {
                          "type": "string",
                          "example": "Ok",
                          "enum": [
                            "Ok",
                            "Minor",
                            "Major",
                            "Critical",
                            "LifeThreatening"
                          ]
                        },
                        "van": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "OMAYSKEITUGNVHKKX"
                        },
                        "semanticDataModel": {
                          "type": "string",
                          "example": "BATCH",
                          "enum": [
                            "BATCH",
                            "SERIALPART",
                            "UNKNOWN",
                            "PARTASPLANNED",
                            "JUSTINSEQUENCE",
                            "TOMBSTONEASBUILT",
                            "TOMBSTONEASPLANNED"
                          ]
                        },
                        "classification": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string",
                          "example": "component"
                        },
                        "detailAspectModels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DetailAspectModelResponse"
                          }
                        },
                        "sentQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "receivedQualityAlertIdsInStatusActive": {
                          "type": "array",
                          "example": 1,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                          }
                        },
                        "sentQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "receivedQualityInvestigationIdsInStatusActive": {
                          "type": "array",
                          "example": 2,
                          "items": {
                            "type": "integer",
                            "format": "int64",
                            "example": 2
                          }
                        },
                        "importState": {
                          "type": "string",
                          "example": "TRANSIENT",
                          "enum": [
                            "TRANSIENT",
                            "PERSISTENT",
                            "ERROR",
                            "IN_SYNCHRONIZATION",
                            "UNSET"
                          ]
                        },
                        "importNote": {
                          "type": "string",
                          "example": "Asset created successfully in transient state"
                        },
                        "tombstone": {
                          "type": "string",
                          "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                        },
                        "contractAgreementId": {
                          "type": "string",
                          "example": "TODO"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/distinctFilterValues": {
      "get": {
        "tags": [
          "AssetsAsBuilt",
          "Assets"
        ],
        "summary": "getDistinctFilterValues",
        "description": "The endpoint returns a distinct filter values for given fieldName.",
        "operationId": "distinctFilterValues_2",
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startWith",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SUPPLIER",
                "CUSTOMER",
                "OWN",
                "UNKNOWN"
              ]
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns a distinct filter values for given fieldName.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/countries": {
      "get": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Get map of assets",
        "description": "The endpoint returns a map for assets consumed by the map.",
        "operationId": "assetsCountryMap",
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the assets found",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/assets/as-built/*/children/{childId}": {
      "get": {
        "tags": [
          "AssetsAsBuilt"
        ],
        "summary": "Get asset by child id",
        "description": "The endpoint returns an asset filtered by child id.",
        "operationId": "assetByChildId",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns the asset by childId",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Assets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                      },
                      "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                      },
                      "semanticModelId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "NO-246880451848384868750731"
                      },
                      "businessPartner": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                      },
                      "manufacturerName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "nameAtManufacturer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "manufacturerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                      },
                      "owner": {
                        "type": "string",
                        "example": "CUSTOMER",
                        "enum": [
                          "SUPPLIER",
                          "CUSTOMER",
                          "OWN",
                          "UNKNOWN"
                        ]
                      },
                      "childRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Child relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "parentRelations": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Parent relationships",
                        "items": {
                          "$ref": "#/components/schemas/DescriptionsResponse"
                        }
                      },
                      "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                          "Ok",
                          "Minor",
                          "Major",
                          "Critical",
                          "LifeThreatening"
                        ]
                      },
                      "van": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "OMAYSKEITUGNVHKKX"
                      },
                      "semanticDataModel": {
                        "type": "string",
                        "example": "BATCH",
                        "enum": [
                          "BATCH",
                          "SERIALPART",
                          "UNKNOWN",
                          "PARTASPLANNED",
                          "JUSTINSEQUENCE",
                          "TOMBSTONEASBUILT",
                          "TOMBSTONEASPLANNED"
                        ]
                      },
                      "classification": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "component"
                      },
                      "detailAspectModels": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/DetailAspectModelResponse"
                        }
                      },
                      "sentQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "receivedQualityAlertIdsInStatusActive": {
                        "type": "array",
                        "example": 1,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      },
                      "sentQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "receivedQualityInvestigationIdsInStatusActive": {
                        "type": "array",
                        "example": 2,
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      },
                      "importState": {
                        "type": "string",
                        "example": "TRANSIENT",
                        "enum": [
                          "TRANSIENT",
                          "PERSISTENT",
                          "ERROR",
                          "IN_SYNCHRONIZATION",
                          "UNSET"
                        ]
                      },
                      "importNote": {
                        "type": "string",
                        "example": "Asset created successfully in transient state"
                      },
                      "tombstone": {
                        "type": "string",
                        "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                      },
                      "contractAgreementId": {
                        "type": "string",
                        "example": "TODO"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Gets Alert by id",
        "description": "The endpoint returns alert by id.",
        "operationId": "getAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "description": "Alerts",
                  "items": {
                    "$ref": "#/components/schemas/AlertResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/alerts/distinctFilterValues": {
      "get": {
        "tags": [
          "Assets",
          "Alerts"
        ],
        "summary": "getDistinctFilterValues",
        "description": "The endpoint returns a distinct filter values for given fieldName.",
        "operationId": "distinctFilterValues_3",
        "parameters": [
          {
            "name": "fieldName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startWith",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SENDER",
                "RECEIVER"
              ]
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns a distinct filter values for given fieldName.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/submodel/data": {
      "delete": {
        "tags": [
          "Submodel"
        ],
        "summary": "Delete All Submodels",
        "description": "Deletes all submodels from the system.",
        "operationId": "deleteSubmodels",
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Ok."
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    },
    "/bpn-config/{bpn}": {
      "delete": {
        "tags": [
          "BpnEdcMapping"
        ],
        "summary": "Deletes BPN EDC URL mappings",
        "description": "The endpoint deletes BPN EDC URL mappings",
        "operationId": "deleteBpnEdcUrlMappings",
        "parameters": [
          {
            "name": "bpn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Okay"
          },
          "204": {
            "description": "Deleted."
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oAuth2": [
              "profile email"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BpnMappingRequest": {
        "required": [
          "bpn",
          "url"
        ],
        "type": "object",
        "properties": {
          "bpn": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "BPNL00000003CSGV"
          },
          "url": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 1000,
            "minLength": 0,
            "pattern": "^.*$",
            "type": "string"
          }
        }
      },
      "BpnEdcMappingResponse": {
        "type": "object",
        "properties": {
          "bpn": {
            "type": "string",
            "example": "BPNL00000003CSGV"
          },
          "url": {
            "type": "string",
            "example": "https://trace-x-test-edc.dev.demo.catena-x.net/a1"
          }
        }
      },
      "StartQualityNotificationRequest": {
        "required": [
          "severity"
        ],
        "type": "object",
        "properties": {
          "partIds": {
            "maxLength": 100,
            "minLength": 1,
            "maxItems": 50,
            "minItems": 1,
            "type": "array",
            "example": [
              "urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978"
            ],
            "items": {
              "maxLength": 100,
              "minLength": 1,
              "type": "string",
              "example": "[\"urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978\"]"
            }
          },
          "description": {
            "maxLength": 1000,
            "minLength": 15,
            "type": "string",
            "example": "The description"
          },
          "targetDate": {
            "type": "string",
            "format": "date-time",
            "example": "2099-03-11T22:44:06.333826952Z"
          },
          "severity": {
            "type": "string",
            "enum": [
              "MINOR",
              "MAJOR",
              "CRITICAL",
              "LIFE_THREATENING"
            ]
          },
          "receiverBpn": {
            "type": "string",
            "example": "BPN00001123123AS"
          },
          "asBuilt": {
            "type": "boolean"
          }
        }
      },
      "QualityNotificationIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "UpdateQualityNotificationRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The UpdateInvestigationStatus",
            "enum": [
              "ACKNOWLEDGED",
              "ACCEPTED",
              "DECLINED"
            ]
          },
          "reason": {
            "type": "string",
            "example": "The reason."
          }
        }
      },
      "CloseQualityNotificationRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "maxLength": 1000,
            "minLength": 15,
            "type": "string",
            "example": "The reason."
          }
        }
      },
      "OwnPageable": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "maxItems": 2147483647,
            "type": "array",
            "description": "Content of Assets PageResults",
            "example": "manufacturerPartId,desc",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageableFilterRequest": {
        "type": "object",
        "properties": {
          "pageAble": {
            "$ref": "#/components/schemas/OwnPageable"
          },
          "searchCriteria": {
            "$ref": "#/components/schemas/SearchCriteriaRequestParam"
          }
        }
      },
      "SearchCriteriaRequestParam": {
        "type": "object",
        "properties": {
          "filter": {
            "maxItems": 2147483647,
            "type": "array",
            "description": "Filter Criteria",
            "example": "owner,EQUAL,OWN",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InvestigationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 255,
            "minimum": 0,
            "maxLength": 255,
            "type": "integer",
            "format": "int64",
            "example": 66
          },
          "status": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "CREATED",
            "enum": [
              "CREATED",
              "SENT",
              "RECEIVED",
              "ACKNOWLEDGED",
              "ACCEPTED",
              "DECLINED",
              "CANCELED",
              "CLOSED"
            ]
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "example": "DescriptionText"
          },
          "createdBy": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "BPNL00000003AYRE"
          },
          "createdByName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "Tier C"
          },
          "createdDate": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "2023-02-21T21:27:10.734950Z"
          },
          "assetIds": {
            "maxItems": 1000,
            "minItems": 0,
            "type": "array",
            "example": [
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
            ],
            "items": {
              "type": "string",
              "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
            }
          },
          "channel": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "SENDER",
            "enum": [
              "SENDER",
              "RECEIVER"
            ]
          },
          "reason": {
            "$ref": "#/components/schemas/QualityNotificationReasonResponse"
          },
          "sendTo": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "BPNL00000003AYRE"
          },
          "sendToName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "Tier C"
          },
          "severity": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "MINOR",
            "enum": [
              "MINOR",
              "MAJOR",
              "CRITICAL",
              "LIFE-THREATENING"
            ]
          },
          "targetDate": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "2099-02-21T21:27:10.734950Z"
          },
          "errorMessage": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "EDC not reachable"
          },
          "qualityNotificationMessageResponseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityNotificationMessageResponse"
            }
          }
        }
      },
      "QualityNotificationMessageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByName": {
            "type": "string"
          },
          "sendTo": {
            "type": "string"
          },
          "sendToName": {
            "type": "string"
          },
          "edcUrl": {
            "type": "string"
          },
          "contractAgreementId": {
            "type": "string"
          },
          "notificationReferenceId": {
            "type": "string"
          },
          "targetDate": {
            "type": "string",
            "format": "date-time"
          },
          "severity": {
            "type": "string",
            "enum": [
              "MINOR",
              "MAJOR",
              "CRITICAL",
              "LIFE-THREATENING"
            ]
          },
          "edcNotificationId": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "messageId": {
            "type": "string"
          },
          "isInitial": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "SENT",
              "RECEIVED",
              "ACKNOWLEDGED",
              "ACCEPTED",
              "DECLINED",
              "CANCELED",
              "CLOSED"
            ]
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "QualityNotificationReasonResponse": {
        "type": "object",
        "properties": {
          "close": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "example": "description of closing reason"
          },
          "accept": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "example": "description of accepting reason"
          },
          "decline": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "example": "description of declining reason"
          }
        }
      },
      "CreateNotificationContractRequest": {
        "required": [
          "notificationMethod",
          "notificationType"
        ],
        "type": "object",
        "properties": {
          "notificationType": {
            "type": "string",
            "enum": [
              "QUALITY_INVESTIGATION",
              "QUALITY_ALERT"
            ]
          },
          "notificationMethod": {
            "type": "string",
            "enum": [
              "RECEIVE",
              "UPDATE",
              "RESOLVE"
            ]
          }
        }
      },
      "CreateNotificationContractResponse": {
        "type": "object",
        "properties": {
          "notificationAssetId": {
            "type": "string",
            "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
          },
          "accessPolicyId": {
            "type": "string",
            "example": "123"
          },
          "contractDefinitionId": {
            "type": "string",
            "example": "456"
          }
        }
      },
      "ContractResponse": {
        "type": "object",
        "properties": {
          "contractId": {
            "maxLength": 255,
            "type": "string",
            "example": "66"
          },
          "counterpartyAddress": {
            "maxLength": 255,
            "type": "string",
            "example": "https://trace-x-edc-e2e-a.dev.demo.catena-x.net/api/v1/dsp"
          },
          "creationDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T21:27:10.73495Z"
          },
          "endDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T21:27:10.73495Z"
          },
          "state": {
            "maxLength": 255,
            "type": "string",
            "example": "FINALIZED"
          },
          "policy": {
            "maxLength": 255,
            "type": "string",
            "example": "{\\\"@id\\\":\\\"eb0c8486-914a-4d36-84c0-b4971cbc52e4\\\",\\\"@type\\\":\\\"odrl:Set\\\",\\\"odrl:permission\\\":{\\\"odrl:target\\\":\\\"registry-asset\\\",\\\"odrl:action\\\":{\\\"odrl:type\\\":\\\"USE\\\"},\\\"odrl:constraint\\\":{\\\"odrl:or\\\":{\\\"odrl:leftOperand\\\":\\\"PURPOSE\\\",\\\"odrl:operator\\\":{\\\"@id\\\":\\\"odrl:eq\\\"},\\\"odrl:rightOperand\\\":\\\"ID 3.0 Trace\\\"}}},\\\"odrl:prohibition\\\":[],\\\"odrl:obligation\\\":[],\\\"odrl:target\\\":\\\"registry-asset\\\"}"
          }
        }
      },
      "PageResultContractResponse": {
        "type": "object",
        "properties": {
          "content": {
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "description": "Content of PageResults",
            "items": {
              "$ref": "#/components/schemas/ContractResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "example": 15
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "totalItems": {
            "type": "integer",
            "format": "int64",
            "example": 2
          }
        }
      },
      "RegisterAssetRequest": {
        "required": [
          "assetIds",
          "policyId"
        ],
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string",
            "example": "a644a7cb-3de5-493b-9259-f01db315a46e"
          },
          "assetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SyncAssetsRequest": {
        "type": "object",
        "properties": {
          "globalAssetIds": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "example": [
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
            ],
            "items": {
              "type": "string",
              "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\"]"
            }
          }
        }
      },
      "GetDetailInformationRequest": {
        "type": "object",
        "properties": {
          "assetIds": {
            "maxLength": 50,
            "minLength": 1,
            "maxItems": 50,
            "minItems": 1,
            "type": "array",
            "example": [
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
            ],
            "items": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string",
              "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\"]"
            }
          }
        }
      },
      "DescriptionsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "urn:uuid:a4a26b9c-9460-4cc5-8645-85916b86adb0"
          },
          "idShort": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "assembly-part-relationship"
          }
        }
      },
      "DetailAspectDataAsBuiltResponse": {
        "type": "object",
        "properties": {
          "partId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "95657762-59"
          },
          "customerPartId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "01697F7-65"
          },
          "nameAtCustomer": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "Door front-left"
          },
          "manufacturingCountry": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "DEU"
          },
          "manufacturingDate": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "2022-02-04T13:48:54Z"
          }
        }
      },
      "DetailAspectDataAsPlannedResponse": {
        "type": "object",
        "properties": {
          "validityPeriodFrom": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "2022-09-26T12:43:51.079Z"
          },
          "validityPeriodTo": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "20232-07-13T12:00:00.000Z"
          }
        }
      },
      "DetailAspectDataResponse": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DetailAspectDataAsBuiltResponse"
          },
          {
            "$ref": "#/components/schemas/DetailAspectDataAsPlannedResponse"
          },
          {
            "$ref": "#/components/schemas/PartSiteInformationAsPlannedResponse"
          },
          {
            "$ref": "#/components/schemas/DetailAspectDataTractionBatteryCodeResponse"
          }
        ]
      },
      "DetailAspectDataTractionBatteryCodeResponse": {
        "type": "object",
        "properties": {
          "productType": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "pack"
          },
          "tractionBatteryCode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "X12MCPM27KLPCLX2M2382320"
          },
          "subcomponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailAspectDataTractionBatteryCodeSubcomponentResponse"
            }
          }
        }
      },
      "DetailAspectDataTractionBatteryCodeSubcomponentResponse": {
        "type": "object",
        "properties": {
          "productType": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "pack"
          },
          "tractionBatteryCode": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "X12MCPM27KLPCLX2M2382320"
          }
        }
      },
      "DetailAspectModelResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "PART_SITE_INFORMATION_AS_PLANNED",
            "enum": [
              "AS_BUILT",
              "AS_PLANNED",
              "TRACTION_BATTERY_CODE",
              "SINGLE_LEVEL_BOM_AS_BUILT",
              "SINGLE_LEVEL_USAGE_AS_BUILT",
              "SINGLE_LEVEL_BOM_AS_PLANNED",
              "PART_SITE_INFORMATION_AS_PLANNED"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/DetailAspectDataResponse"
          }
        }
      },
      "PartSiteInformationAsPlannedResponse": {
        "type": "object",
        "properties": {
          "functionValidUntil": {
            "type": "string",
            "example": "2025-02-08T04:30:48.000Z"
          },
          "function": {
            "type": "string",
            "example": "production"
          },
          "functionValidFrom": {
            "type": "string",
            "example": "2023-10-13T14:30:45+01:00"
          },
          "catenaXSiteId": {
            "type": "string",
            "example": "urn:uuid:0fed587c-7ab4-4597-9841-1718e9693003"
          }
        }
      },
      "AlertResponse": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 255,
            "minimum": 0,
            "maxLength": 255,
            "type": "integer",
            "format": "int64",
            "example": 66
          },
          "status": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "CREATED",
            "enum": [
              "CREATED",
              "SENT",
              "RECEIVED",
              "ACKNOWLEDGED",
              "ACCEPTED",
              "DECLINED",
              "CANCELED",
              "CLOSED"
            ]
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "example": "DescriptionText"
          },
          "createdBy": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "BPNL00000003AYRE"
          },
          "createdByName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "Tier C"
          },
          "createdDate": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "2023-02-21T21:27:10.734950Z"
          },
          "assetIds": {
            "maxItems": 1000,
            "minItems": 0,
            "type": "array",
            "example": [
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
              "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
            ],
            "items": {
              "type": "string",
              "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
            }
          },
          "channel": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "SENDER",
            "enum": [
              "SENDER",
              "RECEIVER"
            ]
          },
          "reason": {
            "$ref": "#/components/schemas/QualityNotificationReasonResponse"
          },
          "sendTo": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "BPNL00000003AYRE"
          },
          "sendToName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "Tier C"
          },
          "severity": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "MINOR",
            "enum": [
              "MINOR",
              "MAJOR",
              "CRITICAL",
              "LIFE-THREATENING"
            ]
          },
          "targetDate": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "example": "2099-02-21T21:27:10.734950Z"
          },
          "errorMessage": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "example": "EDC not reachable"
          },
          "qualityNotificationMessageResponseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityNotificationMessageResponse"
            }
          }
        }
      },
      "UpdateAssetRequest": {
        "required": [
          "qualityType"
        ],
        "type": "object",
        "properties": {
          "qualityType": {
            "type": "string",
            "example": "Ok",
            "enum": [
              "Ok",
              "Minor",
              "Major",
              "Critical",
              "LifeThreatening"
            ]
          }
        }
      },
      "ConstraintResponse": {
        "type": "object",
        "properties": {
          "leftOperand": {
            "type": "string",
            "example": "PURPOSE"
          },
          "operatorTypeResponse": {
            "type": "string",
            "enum": [
              "EQ",
              "NEQ",
              "LT",
              "GT",
              "IN",
              "LTEQ",
              "GTEQ",
              "ISA",
              "HASPART",
              "ISPARTOF",
              "ISONEOF",
              "ISALLOF",
              "ISNONEOF"
            ]
          },
          "rightOperand": {
            "type": "string",
            "example": "ID Trace 3.1"
          }
        }
      },
      "ConstraintsResponse": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintResponse"
            }
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintResponse"
            }
          }
        }
      },
      "PermissionResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "USE",
            "enum": [
              "ACCESS",
              "USE"
            ]
          },
          "constraints": {
            "$ref": "#/components/schemas/ConstraintsResponse"
          }
        }
      },
      "PolicyResponse": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string",
            "example": "5a00bb50-0253-405f-b9f1-1a3150b9d51d"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            }
          }
        }
      },
      "DashboardResponse": {
        "type": "object",
        "properties": {
          "asBuiltCustomerParts": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "asPlannedCustomerParts": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "asBuiltSupplierParts": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "asPlannedSupplierParts": {
            "type": "integer",
            "format": "int64",
            "example": 3
          },
          "asBuiltOwnParts": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "asPlannedOwnParts": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "myPartsWithOpenAlerts": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "myPartsWithOpenInvestigations": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "supplierPartsWithOpenAlerts": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "customerPartsWithOpenAlerts": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "supplierPartsWithOpenInvestigations": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "customerPartsWithOpenInvestigations": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "receivedActiveAlerts": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "receivedActiveInvestigations": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "sentActiveAlerts": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "sentActiveInvestigations": {
            "type": "integer",
            "format": "int64",
            "example": 2
          }
        }
      },
      "ImportJobResponse": {
        "type": "object",
        "properties": {
          "importJobStatus": {
            "type": "string",
            "enum": [
              "INITIALIZING",
              "RUNNING",
              "ERROR",
              "COMPLETED"
            ]
          },
          "importId": {
            "type": "string",
            "example": "456a952e-05eb-40dc-a6f2-9c2cb9c1387f"
          },
          "startedOn": {
            "maxLength": 50,
            "type": "string",
            "example": "2099-02-21T21:27:10.734950Z"
          },
          "completedOn": {
            "maxLength": 50,
            "type": "string",
            "example": "2099-02-21T21:27:10.734950Z"
          }
        }
      },
      "ImportReportResponse": {
        "type": "object",
        "properties": {
          "importJob": {
            "$ref": "#/components/schemas/ImportJobResponse"
          },
          "importedAsset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportedAssetResponse"
            }
          }
        }
      },
      "ImportedAssetResponse": {
        "type": "object",
        "properties": {
          "importState": {
            "type": "string",
            "enum": [
              "TRANSIENT",
              "PERSISTENT",
              "ERROR",
              "IN_SYNCHRONIZATION",
              "UNSET"
            ]
          },
          "catenaxId": {
            "type": "string",
            "example": "urn:uuid:7eeeac86-7b69-444d-81e6-655d0f1513bd}"
          },
          "importedOn": {
            "maxLength": 50,
            "type": "string",
            "example": "2099-02-21T21:27:10.734950Z"
          },
          "importMessage": {
            "type": "string",
            "example": "Asset created successfully in transient state."
          }
        }
      }
    },
    "securitySchemes": {
      "oAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "localhost",
            "scopes": {
              "profile email": ""
            }
          }
        }
      }
    }
  }
}
